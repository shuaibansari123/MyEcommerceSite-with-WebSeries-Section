# ==============================================================================
# ShopEase E-commerce Platform - Production Docker Compose
# Multi-container production setup with load balancing and monitoring
# ==============================================================================

version: '3.8'

# Shared network for all services
networks:
  shopease-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Persistent volumes for data storage
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local
  nginx_logs:
    driver: local
  app_logs:
    driver: local

services:
  # ==============================================================================
  # Database Service - PostgreSQL
  # ==============================================================================
  db:
    image: postgres:15-alpine
    container_name: shopease-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-shopease}
      POSTGRES_USER: ${DB_USER:-shopease}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-shopease123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      shopease-network:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-shopease} -d ${DB_NAME:-shopease}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ==============================================================================
  # Redis Cache & Session Store
  # ==============================================================================
  redis:
    image: redis:7-alpine
    container_name: shopease-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      shopease-network:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ==============================================================================
  # Main Web Application
  # ==============================================================================
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shopease-web
    restart: unless-stopped
    environment:
      # Django Configuration
      DJANGO_SETTINGS_MODULE: mac.settings
      DEBUG: 'False'
      
      # Database Configuration
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME:-shopease}
      DB_USER: ${DB_USER:-shopease}
      DB_PASSWORD: ${DB_PASSWORD:-shopease123}
      DB_HOST: db
      DB_PORT: 5432
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      
      # Security
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      
      # Superuser Configuration
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME:-admin}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL:-admin@shopease.com}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD:-admin123}
      
      # Application Configuration
      LOAD_SAMPLE_DATA: ${LOAD_SAMPLE_DATA:-true}
      
      # Email Configuration (if needed)
      EMAIL_BACKEND: ${EMAIL_BACKEND:-django.core.mail.backends.console.EmailBackend}
      EMAIL_HOST: ${EMAIL_HOST:-}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-True}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
      
      # Monitoring
      SENTRY_DSN: ${SENTRY_DSN:-}
      
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - app_logs:/var/log/shopease
    networks:
      shopease-network:
        ipv4_address: 172.20.0.20
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      replicas: 2

  # ==============================================================================
  # Celery Worker for Background Tasks
  # ==============================================================================
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shopease-worker
    restart: unless-stopped
    command: ["worker"]
    environment:
      DJANGO_SETTINGS_MODULE: mac.settings
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME:-shopease}
      DB_USER: ${DB_USER:-shopease}
      DB_PASSWORD: ${DB_PASSWORD:-shopease123}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - media_files:/app/media
      - app_logs:/var/log/shopease
    networks:
      shopease-network:
        ipv4_address: 172.20.0.21
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ==============================================================================
  # Celery Beat Scheduler
  # ==============================================================================
  beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shopease-beat
    restart: unless-stopped
    command: ["beat"]
    environment:
      DJANGO_SETTINGS_MODULE: mac.settings
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME:-shopease}
      DB_USER: ${DB_USER:-shopease}
      DB_PASSWORD: ${DB_PASSWORD:-shopease123}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - app_logs:/var/log/shopease
    networks:
      shopease-network:
        ipv4_address: 172.20.0.22
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ==============================================================================
  # Nginx Load Balancer & Static File Server
  # ==============================================================================
  nginx:
    image: nginx:alpine
    container_name: shopease-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_files:/app/staticfiles:ro
      - media_files:/app/media:ro
      - nginx_logs:/var/log/nginx
      - ./docker/ssl:/etc/nginx/ssl:ro  # SSL certificates
    networks:
      shopease-network:
        ipv4_address: 172.20.0.30
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ==============================================================================
  # Flower - Celery Monitoring (Optional)
  # ==============================================================================
  flower:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shopease-flower
    restart: unless-stopped
    command: ["flower"]
    environment:
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      FLOWER_PORT: 5555
      FLOWER_BASIC_AUTH: ${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-flower123}
    ports:
      - "5555:5555"
    networks:
      shopease-network:
        ipv4_address: 172.20.0.40
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ==============================================================================
  # Prometheus Monitoring (Optional)
  # ==============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: shopease-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      shopease-network:
        ipv4_address: 172.20.0.50
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ==============================================================================
  # Grafana Dashboard (Optional)
  # ==============================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: shopease-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-grafana123}
    volumes:
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      shopease-network:
        ipv4_address: 172.20.0.51
    depends_on:
      - prometheus
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M 